from Person import Person


class Student(Person):

    def __init__(self, user_id, name, age, degree_name, year, predicted_graduation_year, degree_type, id, first_name,
                 second_name, last_name, status, university_social_contributions=True, faculty_number=None):
        super().__init__(id, first_name, second_name, last_name, status)
        self._user_id = user_id
        self._name = name
        self._age = age
        self._degree_name = degree_name
        self._year = year
        self._predicted_graduation_year = predicted_graduation_year
        self._degree_type = degree_type
        self._university_social_contributions = university_social_contributions
        self._faculty_number = faculty_number
        self._status = status

    # is_employed and generate_faculty_number shouldn't be there, because the student can't do them
    # --> should be generated by DB
    def is_employed(self, value):
        if value:
            self._university_social_contributions = False
        return

    def generate_faculty_number(self, user_id, course):
        pass

    def calc_average_grade(self, *grades):
        pass


